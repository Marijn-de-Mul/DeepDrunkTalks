name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: (Github) Checkout Code
        uses: actions/checkout@v4

      - name: (Node.js) Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: (Frontend) Install Dependencies
        working-directory: DeepDrunkTalk.Frontend/
        run: npm install

      - name: Fetch full commit history
        run: |
          git fetch --prune --unshallow

      # - name: (Frontend) Get Changed Files
      #   id: changed-files
      #   run: |
      #     files=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '\.(js|jsx|ts|tsx)$' || echo "")
      #     echo "Changed files: $files"
      #     echo "files=$files" >> $GITHUB_ENV

      #- name: (Frontend) Lint Changed Files
      #  working-directory: DeepDrunkTalk.Frontend/
      #  run: |
      #    if [ -n "$files" ]; then
      #      npx eslint $files --max-warnings 0
      #    else
      #      echo "No files to lint"
      #    fi

      - name: (BuildX) Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: (Docker) Build DeepDrunkTalks Frontend Docker Image
        working-directory: DeepDrunkTalk.Frontend/
        run: docker build . -t marijndemul16/ddt.frontend:latest

      - name: (Docker) Log Into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: (Docker) Push The DeepDrunkTalks Frontend Image To Docker Hub
        run: docker push marijndemul16/ddt.frontend

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: (Github) Checkout Code
        uses: actions/checkout@v4

      - name: (.NET) Setup
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: '8.0.x'

      - name: (.NET) Restore Backend Dependencies
        run: dotnet restore DeepDrunkTalk.Backend/DeepDrunkTalks.Backend.sln

      - name: Fetch full commit history (Backend)
        run: |
          git fetch --prune --unshallow

      - name: Get changed files
        id: files
        run: |
          # Capture the changed .cs files, excluding obj and bin directories
          files=$(git diff --name-only 9faa0004192bb25cfa79598c1671232c56d7e05f de867efc4e1b52e3a1a5f4edf8b6efd74bad1758 | grep -E '\.cs$' | grep -vE 'obj|bin' || echo "")
          
          # Print the files for debugging purposes
          echo "Changed files: $files"
          
          # Split files and save them as separate variables
          IFS=' ' read -r -a files_array <<< "$files"
          
          # Set each file path as a separate environment variable
          for i in "${!files_array[@]}"; do
            echo "FILE_$i=${files_array[$i]}" >> $GITHUB_ENV
          done

      - name: Debug changed files
        run: |
          echo "Listing all changed files:"
          for i in $(seq 0 $((${#files_array[@]} - 1))); do
            echo "File $i: ${!FILE_$i}"
          done

      - name: (Backend) Lint Changed Files
        run: |
          if [ -n "$files" ]; then
            dotnet format $files --check --verify-no-diagrams
          else
            echo "No files to lint"
          fi

      - name: (.NET) Run Unit Tests
        run: dotnet test --no-build --verbosity normal DeepDrunkTalk.Backend/DeepDrunkTalks.Backend.sln

      - name: (.NET) Build DeepDrunkTalks Backend
        run: dotnet build --no-restore DeepDrunkTalk.Backend/DeepDrunkTalks.Backend.sln

      - name: (BuildX) Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: (Docker) Build DeepDrunkTalks Backend Docker Image
        working-directory: DeepDrunkTalk.Backend/
        run: docker build . -t marijndemul16/ddt.backend:latest

      - name: (Docker) Log Into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: (Docker) Push The DeepDrunkTalks Backend Image To Docker Hub
        run: docker push marijndemul16/ddt.backend

  e2e-tests:
    needs: [frontend, backend]
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
  
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
  
      - name: Deploy to Staging and Run Playwright Tests
        run: |
          ssh -o StrictHostKeyChecking=no root@45.140.142.168 '
            set -e  
  
            export DOCKER_BUILDKIT=1
            export DOCKER_CLI_EXPERIMENTAL=enabled
  
            cd /root/docker/ddt_staging
  
            docker compose down
  
            docker compose pull
  
            docker image prune -f
  
            docker compose up -d
  
            sleep 15
          '

      - name: Archive Playwright Reports on VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@45.140.142.168 '
            cd /root/docker/ddt_staging/playwright-report
            tar -czf /root/docker/ddt_staging/playwright-report.tar.gz .
          '
  
      - name: Download Playwright Report
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.VPS_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "/root/docker/ddt_staging/playwright-report.tar.gz"
          target: "./playwright-report.tar.gz"
  
      - name: Extract Playwright Report
        run: tar -xzf playwright-report.tar.gz -C ./
  
      - name: Upload Playwright Report
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: ./playwright-report/
          retention-days: 30

  cd:
    needs: [e2e-tests]
    runs-on: ubuntu-latest

    steps:
      - name: (Github) Checkout Code
        uses: actions/checkout@v4

      - name: (SSH) Set up SSH keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: (Docker) SSH into VPS and Deploy Production Environment
        run: |
          ssh -o StrictHostKeyChecking=no root@45.140.142.168 '
            export DOCKER_BUILDKIT=1
            export DOCKER_CLI_EXPERIMENTAL=enabled

            cd /root/docker/ddt

            docker compose down

            docker compose pull
            
            docker image prune -f
            
            docker compose up -d
          '
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled

